This goal of these changes was (a) add a Java method and a JNI bridge so
that problems with the metastore and/or checkpoint files could be fixed;
(b) add diagnostics so that the actual cause could be found. This
file documents the changes.

1. Revision was bumped to 2.1.0

2. Function bool jlog_ctx_repair(bool aggressive) added to jlog.c
   In non-aggressive mode this function examines the metastore file
   and tries to fix it. It then examines the checkpoint file and
   tries to fix that. If both succeed then the function returns true.
   If one or both fail, and aggressive mode is set, then the
   function attempts to delete all files in the jlog PATH directory
   (except the fassert files, see below), and then removes the
   directory itself.

   The function returns true on success and false on failure.

3. A JNI bridge was built with a java function with signature

   public native boolean repair(boolean aggressive);

4. A macro FASSERT() was created to log assertion failures throughout
   the jlog.c code in an effort to track down the pesky misbehaviors
   that sometimes occur. Unlike assert(), FASSERT() does not crash
   the process. It logs assertion failures to files named fassertT,
   where T is the time the assertion file was created. There are
   now many calls to FASSERT in the code.

   Note that when repair() attempts to delete the jlog directory,
   if there are any fassert files in that directory, then an
   attempt is made to move those files to the parent directory.

5. Various small changes were made to configure.in and jlog_config.in
   to detect the presence of stdbool.h and a few other include files.
   If stdbool.h is not found, alternate definitions are extracted
   from the file fakebool.h.

6. A few trivial compiler warnings were addressed.

7. This file, V210_CHANGES, was created.

8. Tests were added to jtest.c

9. Some bug fixes were made on an ad hoc basis as they were observed in
   the code. For example, there is a configure test for sys/param.h, but
   the #include <sys/param.h> was not conditioned on #if HAVE_SYS_PARAM_H.
   A thorough code review as not done at this time.
